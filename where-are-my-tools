#!/usr/bin/env sh

MY_TOOLS="${HOME}/.my_tools"

check_app() {
  if [ $# -ne 2 ] ; then
    echo "Need two args"
    exit 1
  fi
  TOOL_BIN=$1
  TOOL_NAME=$2
  unset ASDF
  unset APT
  if [ -z "$(which ${TOOL_BIN})" ]; then
    echo "[${TOOL_BIN}] is not found!"
    if [ -n "${TOOL_VERSIONS}" ]; then
      if [ -n "$(grep -v -e '^[[:space:]]*#' ${HOME}/.tool-versions | cut -s -d ' ' -f 1 | grep -x ${TOOL_NAME})" ]; then
        echo " * [${TOOL_NAME}] is already configured to be installed with [asdf]!"
        ASDF=1
      elif [ -n "$(ls -1 ${ASDF_DIR}/repository/plugins | grep -x $TOOL_NAME)" ]; then
        echo " * [${TOOL_NAME}] could be installed with [asdf]!"
        ASDF=1
      fi
    fi
    if [ -n "$(which apt-file)" ] && [ -z "${ASDF}" ] && [ -z "${APT}" ]; then
      if [ -n "$(apt-file search -l ${TOOL_BIN} | grep -x ${TOOL_NAME})" ]; then
        echo " * [${TOOL_NAME}] could be installed with [apt]!"
        APT=1
      fi
    fi
    if [ -n "$(which apt-cache)" ] && [ -z "${ASDF}" ] && [ -z "${APT}" ]; then
      if [ -n "$(apt-cache search ${TOOL_NAME} | cut -s -d ' ' -f 1 | grep -w ^${TOOL_NAME}$)" ]; then
        echo " * [${TOOL_NAME}] could be installed with [apt]!"
        APT=1
      fi
    fi
  fi
}

if [ -s "${HOME}/.tool-versions" ]; then
  TOOL_VERSIONS=1
fi

if [ -s "${MY_TOOLS}" ]; then
  TOOLS="$(grep -v -e '^[[:space:]]*#' ${MY_TOOLS})"
  for TOOL in ${TOOLS}; do
    TOOL_BIN=${TOOL}
    TOOL_NAME=${TOOL}
    if [ "$(echo ${TOOL} | grep -c '=')" -eq 1 ] ; then
      TOOL_BIN="$(echo ${TOOL} | cut -s -d '=' -f 1)"
      TOOL_NAME="$(echo ${TOOL} | cut -s -d '=' -f 2)"
    elif [ "$(echo ${TOOL} | grep -c '=')" -gt 1 ]; then
      echo "Mailformed record: ${TOOL}"
    fi
    check_app ${TOOL_BIN} ${TOOL_NAME}
  done
else
  echo "No config was found at [${MY_TOOLS}]"
fi
